# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# Use vi mode to copy
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Bigger history
set -g history-limit 50000

# tmux messages are displayed for 3 seconds
set -g display-time 3000

# set only on OS X where it's required
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Ring the bell if any background window rang a bell
set -g bell-action any

# sort the window numbers
set-option -g renumber-windows on

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ',xterm-256color:Tc'

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Show/Hide status bar
bind-key h set status

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 20 
bind -r J resize-pane -D 20
bind -r K resize-pane -U 20
bind -r L resize-pane -R 20
# bind -n C-k clear-history

unbind C
bind-key C send-keys "clear && tmux clear-history" \; send-keys "Enter"
# bind-key X send-keys "clear" \; send-keys "Enter" \; clear-history
# bind-key -n C-l send-keys C-l \; send-keys -R \; clear-history

set-option -g status-justify right

# mouse behavior
set-window-option -g mouse on
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
setw -gq mode-mouse on
set -gq mouse-select-pane on
set -gq mouse-resize-pane on
set -gq mouse-select-window on

# Tmux Plugin Mamanger
# Install TPM
#   git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# Run prefix + I to install the plugins
# prefix + U to updates plugin(s)
# prefix + alt + u to remove/uninstall plugins not on the plugin list
set -g @plugin 'tmux-plugins/tpm'
# Smart pane switching with awareness of Vim splits.
# <ctrl-h> => Left <ctrl-j> => Down <ctrl-k> => Up <ctrl-l> => Right
# See: https://github.com/christoomey/vim-tmux-navigator
set -g @plugin 'christoomey/vim-tmux-navigator'

# Add kube context and namespace in status bar
set -g @plugin 'jonmosco/kube-tmux'

# Some common setup
set -g @plugin 'tmux-plugins/tmux-sensible'

# Restore tmux environment after system restart.
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore
set -g @plugin 'tmux-plugins/tmux-resurrect'
# enable for vim in tmux
# need to install https://github.com/tpope/vim-obsession
# set -g @resurrect-strategy-vim 'session'

set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# set -g @plugin 'dracula/tmux'
# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, network-ping, weather, time
# set -g @dracula-plugins "git, time"
set -g @plugin 'git@github.com:egel/tmux-gruvbox.git'
set -g @tmux-gruvbox 'dark'

run '~/.tmux/plugins/tpm/tpm'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'
